<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.16">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec>H/15 * * * *</spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.42">
    <script>node {
   def mvnHome
   stage(&apos;Preparation&apos;) { // for display purposes
      // Get some code from a GitHub repository
      git &apos;https://github.com/spring-projects/spring-petclinic.git&apos;
      // Get the Maven tool.
      // ** NOTE: This &apos;M3&apos; Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool &apos;M3&apos;
   }
   stage(&apos;Build&apos;) {
      // Run the maven build
      if (isUnix()) {
         sh &quot;&apos;${mvnHome}/bin/mvn&apos; -Dmaven.test.failure.ignore clean package&quot;
         
      } else {
         bat(/&quot;${mvnHome}\bin\mvn&quot; -Dmaven.test.failure.ignore clean package/)
      }
   }
   stage(&apos;Results&apos;) {
      junit &apos;**/target/surefire-reports/TEST-*.xml&apos;
      archive &apos;target/*.jar&apos;
   }
}
node {
    stage(&apos;Deploy&apos;) {
        script {
            withEnv([&apos;JENKINS_NODE_COOKIE=do_not_kill&apos;]) {
                sh &apos;pgrep -f &quot;java -jar /deploy-petclinic/spring-petclinic.jar&quot; | sudo xargs kill &amp;&apos;
                sh &apos;if [ ! -d /deploy-petclinic ]; then sudo mkdir /deploy-petclinic; fi&apos;
                sh &apos;sudo cp target/*.jar /deploy-petclinic/spring-petclinic.jar&apos;
                sh &apos;nohup nice java -jar /deploy-petclinic/spring-petclinic.jar &amp;&apos;
                sh &apos;while ! httping -qc1 http://localhost:8080 ; do sleep 1 ; done&apos;;
            }
        }
   }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>